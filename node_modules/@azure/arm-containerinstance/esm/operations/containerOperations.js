/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/containerOperationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ContainerOperations. */
var ContainerOperations = /** @class */ (function () {
    /**
     * Create a ContainerOperations.
     * @param {ContainerInstanceManagementClientContext} client Reference to the service client.
     */
    function ContainerOperations(client) {
        this.client = client;
    }
    ContainerOperations.prototype.listLogs = function (resourceGroupName, containerGroupName, containerName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            containerGroupName: containerGroupName,
            containerName: containerName,
            options: options
        }, listLogsOperationSpec, callback);
    };
    ContainerOperations.prototype.executeCommand = function (resourceGroupName, containerGroupName, containerName, containerExecRequest, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            containerGroupName: containerGroupName,
            containerName: containerName,
            containerExecRequest: containerExecRequest,
            options: options
        }, executeCommandOperationSpec, callback);
    };
    return ContainerOperations;
}());
export { ContainerOperations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listLogsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.containerGroupName,
        Parameters.containerName
    ],
    queryParameters: [
        Parameters.apiVersion,
        Parameters.tail
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Logs
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var executeCommandOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/exec",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.containerGroupName,
        Parameters.containerName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "containerExecRequest",
        mapper: tslib_1.__assign({}, Mappers.ContainerExecRequest, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.ContainerExecResponse
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=containerOperations.js.map